--postevaluation
samples=100
--executor
classname=taskexecutor.ConillonTaskExecutor
--output
scale_final1/robots4_8_12_20_40_6000steps/3
--evolution
classname=evolutionaryrobotics.evolution.GenerationalEvolution
--robots
classname=simulation.robot.DifferentialDriveRobot,
	swarm_isListOfRobotsNeed=1,
	swarm_listOfRobots=(
		4,
		8,
		12,
		20,
		40
	),
	sensors=(
		OrientationRobotsAverageSensor_1=(
			classname=sensors.OrientationRobotsAverageSensor,
			range=0.25,
			id=1
		),
		RobotSensor_2=(
			classname=simulation.robot.sensors.RobotSensor,
			range=0.25,
			numbersensors=4,
			id=2
		)
	),
	actuators=(
		TwoWheelActuator_1=(
			classname=simulation.robot.actuators.TwoWheelActuator,
			id=1
		)
	)
--random-seed
1332710398
--controllers
classname=evolutionaryrobotics.neuralnetworks.NeuralNetworkController,
	network=(
		classname=evolutionaryrobotics.neuralnetworks.CTRNNMultilayer,
		hiddennodes=10,
		inputs=(
			OrientationRobotsAverageNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=1
			),
			RobotNNInput=(
				classname=evolutionaryrobotics.neuralnetworks.inputs.SensorNNInput,
				id=2
			),
			
		),
		outputs=(
			TwoWheelNNOutput=(
				classname=evolutionaryrobotics.neuralnetworks.outputs.TwoWheelNNOutput,
				id=1
			),
			
		)
	)
--environment
classname=environment.EmptyEnviromentsWithFixPositions,
	width=5,
	height=5,
	steps=6000
--evaluation
classname=evaluationfunctions.flocking.ReynoldsGlobal
--population load=scale_final1/robots4_8_12_20_40_6000steps/3/populations/population5999
--random-seed -41936720
